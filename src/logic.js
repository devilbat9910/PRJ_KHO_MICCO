/**
 * @OnlyCurrentDoc
 * T·ªÜP LOGIC CH√çNH
 * Ch·ª©a c√°c h√†m x·ª≠ l√Ω nghi·ªáp v·ª• c·ªßa ·ª©ng d·ª•ng.
 */

//================================================================
// SECTION: HI·ªÇN TH·ªä V√Ä L·∫§Y D·ªÆ LI·ªÜU FORM
//================================================================

function showSidebar() {
  const html = HtmlService.createTemplateFromFile('FormNhapLieu').evaluate().setTitle('üìù Form Nh·∫≠p/Xu·∫•t Kho');
  SpreadsheetApp.getUi().showSidebar(html);
}

function getDropdownData() {
  // REFACTORED: This function now acts as a simple bridge to the service layer.
  try {
    return getMasterDataForForm();
  } catch (e) {
    Logger.log(`L·ªñI trong getDropdownData (logic.js): ${e.message}`);
    throw new Error(`Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu danh m·ª•c. L·ªói: ${e.message}`);
  }
}

// DEPRECATED: H√†m suggestLotNumber ƒë√£ b·ªã x√≥a kh·ªèi logic.js ƒë·ªÉ tr√°nh l·ªói ƒë·ªá quy.
// Giao di·ªán s·∫Ω g·ªçi tr·ª±c ti·∫øp h√†m trong service.gs.

//================================================================
// SECTION: X·ª¨ L√ù GIAO D·ªäCH V√Ä C·∫¨P NH·∫¨T KHO
//================================================================

// DEPRECATED: This function is moved to service.gs
/*
function generateSku(txObject) {
    ...
}
*/


// DEPRECATED: This function is now handled by service.gs and db.gs
/*
function recordTransaction(txObject) {
  ...
}
*/

/**
 * X·ª≠ l√Ω d·ªØ li·ªáu tr·ª±c ti·∫øp t·ª´ Sidebar.
 * @param {object} formObject - D·ªØ li·ªáu t·ª´ form.
 * @returns {object} - K·∫øt qu·∫£ th√†nh c√¥ng ho·∫∑c th·∫•t b·∫°i.
 */
function processFormData(formObject) {
  try {
    Logger.log("B·∫Øt ƒë·∫ßu service_processSingleTransaction...");
    const result = service_processSingleTransaction(formObject);
    Logger.log("Ho√†n th√†nh service_processSingleTransaction. K·∫øt qu·∫£: " + JSON.stringify(result));

    if (result.success) {
      Logger.log("B·∫Øt ƒë·∫ßu updateDashboardRecentTransactions...");
      updateDashboardRecentTransactions();
      Logger.log("Ho√†n th√†nh updateDashboardRecentTransactions.");
    }
    
    return result;
  } catch (e) {
    // Ghi l·∫°i to√†n b·ªô stack trace ƒë·ªÉ g·ª° l·ªói chi ti·∫øt h∆°n
    Logger.log(`L·ªói trong processFormData (logic.js): ${e.stack}`);
    return { success: false, message: 'L·ªói: ' + e.message };
  }
}

// DEPRECATED: This entire function is replaced by the vw_tonkho sheet.
/*
function updateInventory(data) {
  ...
}
*/

// DEPRECATED: This function needs to be refactored to use the service layer.
/*
function processManualEntry() {
  ...
}
*/

//================================================================
// SECTION: HI·ªÇN TH·ªä D·ªÆ LI·ªÜU L√äN TRANG CH√çNH
//================================================================

/**
 * C·∫≠p nh·∫≠t b·∫£ng "10 giao d·ªãch g·∫ßn nh·∫•t" tr√™n Trang Ch√≠nh.
 */
function updateDashboardRecentTransactions() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const mainSheet = ss.getSheetByName(MAIN_SHEET_NAME);
  if (!mainSheet) {
    Logger.log(`Kh√¥ng t√¨m th·∫•y sheet "${MAIN_SHEET_NAME}" ƒë·ªÉ c·∫≠p nh·∫≠t.`);
    return;
  }
  const transactions = service_getRecentTransactions();

  // --- Th√™m log chi ti·∫øt ƒë·ªÉ g·ª° l·ªói ---
  Logger.log("D·ªØ li·ªáu transactions nh·∫≠n ƒë∆∞·ª£c: " + JSON.stringify(transactions));
  Logger.log(`S·ªë l∆∞·ª£ng giao d·ªãch: ${transactions.length}`);
  if (transactions.length > 0) {
    Logger.log(`S·ªë c·ªôt c·ªßa giao d·ªãch ƒë·∫ßu ti√™n: ${transactions[0].length}`);
  }
  // --- K·∫øt th√∫c log ---

  const targetRange = mainSheet.getRange(RECENT_TRANSACTIONS_RANGE);
  targetRange.offset(1, 0, targetRange.getNumRows() - 1).clearContent(); // X√≥a d·ªØ li·ªáu c≈©, gi·ªØ header
  if (transactions.length > 0 && transactions[0].length > 0) {
    mainSheet.getRange(4, 1, transactions.length, transactions[0].length).setValues(transactions);
  } else {
    Logger.log("Kh√¥ng c√≥ giao d·ªãch n√†o ƒë·ªÉ hi·ªÉn th·ªã ho·∫∑c d·ªØ li·ªáu giao d·ªãch kh√¥ng h·ª£p l·ªá (0 c·ªôt).");
  }
}

/**
 * X·ª≠ l√Ω d·ªØ li·ªáu t·ª´ b·∫£ng NH·∫¨P TH·ª¶ C√îNG.
 */
function processManualInputTable() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const ui = SpreadsheetApp.getUi();
  const mainSheet = ss.getSheetByName(MAIN_SHEET_NAME);
  if (!mainSheet) {
    ui.alert("Kh√¥ng t√¨m th·∫•y Trang Ch√≠nh.");
    return;
  }

  const inputTableRange = mainSheet.getRange(MANUAL_INPUT_RANGE);
  const dataRegion = inputTableRange.offset(1, 0, inputTableRange.getNumRows() - 1);
  const inputData = dataRegion.getValues();
  
  let processedCount = 0;
  const rowsToClear = [];

  inputData.forEach((row, index) => {
    // B·ªè qua h√†ng tr·ªëng
    if (row.every(cell => cell === '')) {
      return;
    }

    // √Ånh x·∫° tr·ª±c ti·∫øp t·ª´ c·ªôt sang ƒë·ªëi t∆∞·ª£ng, kh√¥ng c·∫ßn di·ªÖn gi·∫£i th√¥ng minh
    const transactionObject = {
      // C·ªôt A trong sheet l√† INDEX (SKU), b·ªè qua khi ƒë·ªçc
      loaiGiaoDich: row[1],
      tenSanPham: row[2],
      quyCach: row[3], // S·∫Ω ƒë∆∞·ª£c ghi ƒë√® b·ªüi th√¥ng tin t·ª´ DANH MUC trong service layer
      loSanXuat: row[4],
      ngaySanXuat: row[5],
      tinhTrangChatLuong: row[6],
      soLuong: row[7],
      phanXuong: row[8], // S·∫Ω ƒë∆∞·ª£c ghi ƒë√® b·ªüi th√¥ng tin t·ª´ DANH MUC
      kho: row[9],
      ghiChu: row[10]
    };

    try {
      // Validation c∆° b·∫£n ·ªü t·∫ßng n√†y
      if (!transactionObject.tenSanPham || !transactionObject.soLuong || !transactionObject.ngaySanXuat || !transactionObject.kho) {
        throw new Error("Thi·∫øu c√°c tr∆∞·ªùng b·∫Øt bu·ªôc: T√™n S·∫£n Ph·∫©m, S·ªë L∆∞·ª£ng, Ng√†y S·∫£n Xu·∫•t, Kho.");
      }
      
      service_processSingleTransaction(transactionObject);
      processedCount++;
      
      // ƒê√°nh d·∫•u h√†ng ƒë·ªÉ x√≥a sau khi x·ª≠ l√Ω th√†nh c√¥ng
      const relativeRow = index + 1;
      rowsToClear.push(relativeRow);

    } catch (e) {
      const errorCell = dataRegion.getCell(index + 1, 1); // C·ªôt A c·ªßa d√≤ng hi·ªán t·∫°i
      errorCell.setBackground("#f4cccc").setNote(`L·ªói: ${e.message}`);
    }
  });

  // X√≥a c√°c h√†ng ƒë√£ x·ª≠ l√Ω th√†nh c√¥ng
  if (processedCount > 0) {
     // X√≥a c√°c h√†ng t·ª´ d∆∞·ªõi l√™n ƒë·ªÉ tr√°nh thay ƒë·ªïi ch·ªâ s·ªë
     rowsToClear.reverse().forEach(relativeRowIndex => {
        const absoluteRowIndex = inputTableRange.getRow() + relativeRowIndex;
        mainSheet.deleteRow(absoluteRowIndex);
     });
     ui.alert(`Ho√†n t·∫•t x·ª≠ l√Ω. ${processedCount} giao d·ªãch ƒë√£ ƒë∆∞·ª£c ghi nh·∫≠n v√† x√≥a kh·ªèi b·∫£ng nh·∫≠p li·ªáu.`);
  } else {
     ui.alert("Kh√¥ng c√≥ giao d·ªãch n√†o ƒë∆∞·ª£c x·ª≠ l√Ω. Vui l√≤ng ki·ªÉm tra l·∫°i d·ªØ li·ªáu v√† c√°c ghi ch√∫ l·ªói (n·∫øu c√≥).");
  }

  // C·∫≠p nh·∫≠t l·∫°i b·∫£ng giao d·ªãch g·∫ßn nh·∫•t
  updateDashboardRecentTransactions();
}

// C√°c h√†m b√°o c√°o v√† ch·ªët s·ªï c·∫ßn ƒë∆∞·ª£c vi·∫øt l·∫°i ƒë·ªÉ t∆∞∆°ng th√≠ch v·ªõi c·∫•u tr√∫c d·ªØ li·ªáu m·ªõi.
/**
 * H√†m c·∫ßu n·ªëi ƒë·ªÉ g·ªçi d·ªãch v·ª• t·∫°o snapshot t·ªìn kho h√†ng th√°ng.
 */
function createMonthlySnapshot() {
  const ui = SpreadsheetApp.getUi();
  try {
    const result = service_createMonthlySnapshot();
    ui.alert(result.message);
  } catch (e) {
    Logger.log(`L·ªói khi t·∫°o snapshot: ${e.stack}`);
    ui.alert(`ƒê√£ x·∫£y ra l·ªói: ${e.message}`);
  }
}
/**
 * H√†m c·∫ßu n·ªëi ƒë·ªÉ g·ªçi d·ªãch v·ª• t·∫°o b√°o c√°o t·ªìn kho.
 */
function generateMonthlyReport() {
  const ui = SpreadsheetApp.getUi();
  try {
    const result = service_generateMonthlyReport();
    ui.alert(result.message);
  } catch (e) {
    Logger.log(`L·ªói khi t·∫°o b√°o c√°o: ${e.stack}`);
    ui.alert(`ƒê√£ x·∫£y ra l·ªói khi t·∫°o b√°o c√°o: ${e.message}`);
  }
}
