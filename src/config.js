/**
 * @OnlyCurrentDoc
 * T·ªÜP C·∫§U H√åNH V√Ä THI·∫æT L·∫¨P
 * Ch·ª©a c√°c bi·∫øn to√†n c·ª•c v√† c√°c h√†m ch·∫°y m·ªôt l·∫ßn.
 */

// --- BI·∫æN C·∫§U H√åNH ---
const CONFIG_SHEET_NAME = 'DANH MUC';
const INVENTORY_SHEET_NAME = 'TON_KHO_HIEN_TAI';
const HISTORY_SHEET_PREFIX = 'LichSu_';
const SNAPSHOT_SHEET_PREFIX = 'Snapshot_';
const REPORT_SHEET_NAME = 'BaoCaoTonKho';
const MAIN_SHEET_NAME = 'Trang Ch√≠nh';
const VIEW_INVENTORY_SHEET_NAME = 'vw_tonkho'; // T√™n sheet View
const LOG_SHEET_NAME = 'LOG_GIAO_DICH_tbl';

// --- T·ªça ƒë·ªô b·∫£ng tr√™n Trang Ch√≠nh ---
const RECENT_TRANSACTIONS_RANGE = 'A3:K14'; // Header ·ªü d√≤ng 3, 11 d√≤ng data (4-14)
const MANUAL_INPUT_RANGE = 'A19:K30';      // Header ·ªü d√≤ng 19, 11 d√≤ng data (20-30)

// Th√™m ho·∫∑c b·ªõt c√°c kho b·∫°n mu·ªën theo d√µi t·∫°i ƒë√¢y.
const MONITORED_WAREHOUSES = ['Kho ƒêT3', 'Kho ƒêT4', 'Kho ƒêT5', 'Kho ƒêT6', 'Kho ƒêT7', 'Kho ƒêT8', 'Kho ƒêT9'];

/**
 * T·∫°o menu t√πy ch·ªânh khi m·ªü file Google Sheets.
 */
function onOpen() {
  const ui = SpreadsheetApp.getUi();
  const menu = ui.createMenu('üì¶ Qu·∫£n L√Ω Kho');
  
  menu.addItem('B·∫£ng ƒëi·ªÅu khi·ªÉn', 'showSidebar');
  menu.addSeparator();
  
  const reportMenu = ui.createMenu('üìä B√°o C√°o & Ch·ªët S·ªï');
  reportMenu.addItem('T·∫°o B√°o C√°o T·ªìn Kho Th√°ng', 'generateMonthlyReport');
  reportMenu.addItem('Ch·ªët S·ªï Cu·ªëi Th√°ng', 'createMonthlySnapshot');
  menu.addSubMenu(reportMenu);
  
  menu.addSeparator();
  
  const helpMenu = ui.createMenu('‚öôÔ∏è Tr·ª£ gi√∫p & C√†i ƒë·∫∑t');
  helpMenu.addItem('T·∫°o/M·ªü T√†i li·ªáu D·ª± √°n', 'createOrOpenDocumentation');
  helpMenu.addItem('T·∫°o Sheet Template cho Trang Ch√≠nh', 'createDashboardTemplateSheet');
  helpMenu.addItem('C·∫≠p nh·∫≠t Trang Ch√≠nh t·ª´ Template', 'updateDashboardFromTemplate');
  helpMenu.addSeparator();
  helpMenu.addItem('Thi·∫øt l·∫≠p c·∫•u tr√∫c (Ch·∫°y 1 l·∫ßn)', 'setupInitialStructure');
  menu.addSubMenu(helpMenu);

  menu.addToUi();
}

/**
 * H√†m thi·∫øt l·∫≠p c·∫•u tr√∫c c·∫ßn thi·∫øt cho h·ªá th·ªëng theo m√¥ h√¨nh "Ma tr·∫≠n T·ªìn kho".
 * Sheet 'DANH MUC' v√† 'LOG_GIAO_DICH_tbl' ƒë∆∞·ª£c gi·ªØ l·∫°i, c√°c sheet t·ªìn kho c≈© b·ªã x√≥a.
 * T·∫°o ra sheet 'TON_KHO_tonghop' v·ªõi c·∫•u tr√∫c c·ªôt ƒë·ªông.
 */
function setupInitialStructure() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const ui = SpreadsheetApp.getUi();

  // 1. ƒê·ªãnh nghƒ©a c·∫•u tr√∫c cho sheet T·ªìn Kho T·ªïng H·ª£p
  const MASTER_INVENTORY_SHEET = 'TON_KHO_tonghop';
  
  // C√°c c·ªôt ƒë·ªãnh danh c·ªë ƒë·ªãnh
  const identifierHeaders = [
    'INDEX (SKU)', 'T√™n Vi·∫øt T·∫Øt', 'Quy C√°ch', 'ƒê∆°n V·ªã S·∫£n Xu·∫•t',
    'L√¥ S·∫£n Xu·∫•t', 'Ng√†y S·∫£n Xu·∫•t', 'T√¨nh Tr·∫°ng Ch·∫•t L∆∞·ª£ng', 'Ng√†y Th·ª≠ N·ªï'
  ];

  // L·∫•y danh s√°ch c√°c c·ªôt kho ƒë·ªông t·ª´ sheet DANH MUC
  const warehouseHeaders = getWarehouseNames();
  if (warehouseHeaders.length === 0) {
    ui.alert('L·ªói: Kh√¥ng t√¨m th·∫•y t√™n kho n√†o trong c·ªôt D c·ªßa sheet "DANH MUC". Vui l√≤ng ki·ªÉm tra l·∫°i.');
    return;
  }

  // K·∫øt h·ª£p hai danh s√°ch ƒë·ªÉ t·∫°o ti√™u ƒë·ªÅ ho√†n ch·ªânh
  const fullHeaders = [identifierHeaders.concat(warehouseHeaders)];

  // 2. T·∫°o ho·∫∑c l√†m m·ªõi sheet T·ªìn Kho T·ªïng H·ª£p
  let inventorySheet = ss.getSheetByName(MASTER_INVENTORY_SHEET);
  if (inventorySheet) {
    inventorySheet.clear(); // X√≥a d·ªØ li·ªáu c≈© n·∫øu sheet ƒë√£ t·ªìn t·∫°i
  } else {
    inventorySheet = ss.insertSheet(MASTER_INVENTORY_SHEET);
  }
  
  inventorySheet.getRange(1, 1, 1, fullHeaders[0].length)
    .setValues(fullHeaders)
    .setFontWeight('bold')
    .setBackground('#f3f3f3');
  inventorySheet.setFrozenColumns(identifierHeaders.length); // C·ªë ƒë·ªãnh c√°c c·ªôt ƒë·ªãnh danh
  inventorySheet.setFrozenRows(1);

  // 3. X√≥a c√°c sheet t·ªìn kho c≈© kh√¥ng c√≤n s·ª≠ d·ª•ng
  const oldViewSheet = ss.getSheetByName(VIEW_INVENTORY_SHEET_NAME);
  if (oldViewSheet) ss.deleteSheet(oldViewSheet);

  const oldInventorySheet = ss.getSheetByName(INVENTORY_SHEET_NAME);
  if (oldInventorySheet) ss.deleteSheet(oldInventorySheet);

  ui.alert(`Thi·∫øt l·∫≠p th√†nh c√¥ng! Sheet "${MASTER_INVENTORY_SHEET}" ƒë√£ ƒë∆∞·ª£c t·∫°o/c·∫≠p nh·∫≠t v·ªõi ${warehouseHeaders.length} kho.`);
}

/**
 * T·∫°o sheet template ƒë·ªÉ ng∆∞·ªùi d√πng t·ª± thi·∫øt k·∫ø.
 */
function createDashboardTemplateSheet() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const templateSheetName = 'TEMPLATE_TRANG_CHINH';
  if (!ss.getSheetByName(templateSheetName)) {
    ss.insertSheet(templateSheetName);
    SpreadsheetApp.getUi().alert(`ƒê√£ t·∫°o sheet "${templateSheetName}". Vui l√≤ng thi·∫øt k·∫ø giao di·ªán mong mu·ªën tr√™n sheet n√†y.`);
  } else {
    SpreadsheetApp.getUi().alert(`Sheet "${templateSheetName}" ƒë√£ t·ªìn t·∫°i.`);
  }
}

/**
 * C·∫≠p nh·∫≠t Trang Ch√≠nh d·ª±a tr√™n sheet template.
 */
function updateDashboardFromTemplate() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const templateSheet = ss.getSheetByName('TEMPLATE_TRANG_CHINH');
  if (!templateSheet) {
    SpreadsheetApp.getUi().alert('L·ªói: Kh√¥ng t√¨m th·∫•y sheet "TEMPLATE_TRANG_CHINH". Vui l√≤ng t·∫°o n√≥ tr∆∞·ªõc.');
    return;
  }

  let mainSheet = ss.getSheetByName(MAIN_SHEET_NAME);
  if (mainSheet) {
    ss.deleteSheet(mainSheet);
  }
  
  mainSheet = templateSheet.copyTo(ss).setName(MAIN_SHEET_NAME);
  
  // Ghi ƒë√® ti√™u ƒë·ªÅ cho b·∫£ng nh·∫≠p th·ªß c√¥ng ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh nh·∫•t qu√°n
  const manualEntryHeaders = [
    ['INDEX (SKU)', 'Lo·∫°i Giao D·ªãch', 'T√™n S·∫£n Ph·∫©m', 'Quy C√°ch', 'L√¥ S·∫£n Xu·∫•t', 'Ng√†y S·∫£n Xu·∫•t', 'T√¨nh Tr·∫°ng Ch·∫•t L∆∞·ª£ng', 'S·ªë L∆∞·ª£ng', 'ƒê∆°n V·ªã S·∫£n Xu·∫•t', 'Kho', 'Ghi Ch√∫']
  ];
  mainSheet.getRange('A19:K19').setValues(manualEntryHeaders).setFontWeight('bold').setBackground('#f3f3f3');

  ss.setActiveSheet(mainSheet);
  SpreadsheetApp.getUi().alert('ƒê√£ c·∫≠p nh·∫≠t th√†nh c√¥ng Trang Ch√≠nh t·ª´ template!');
}
